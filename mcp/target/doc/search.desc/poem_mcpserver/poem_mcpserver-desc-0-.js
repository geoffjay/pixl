searchState.loadedDescShard("poem_mcpserver", 0, "MCP Server implementation for Poem\nA server that can be used to handle MCP requests.\nContent types.\nDisables tools by their names.\nReturns the argument unchanged.\nHandles a request and returns a response.\nCalls <code>U::from(self)</code>.\nCreates a new MCP server.\nThe protocol module contains all the necessary components …\nStandard input and output server implementation.\nTypes for tool.\nSets the tools that the server will use.\nSets the server info (name and version).\nAn image response.\nRepresents a type that can be converted into a content.\nRepresents a type that can be converted into multiple …\nA Json response.\nA text response.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the object and converts it into a content.\nConsumes the object and converts it into multiple contents.\nCreates a image content.\nThe JSON-RPC version.\nThe MCP protocol version.\nContent type.\nInitialize request and response.\nPrompt protocol.\nResource protocol.\nJSON-RPC protocol types.\nTool protocol.\nA content that can be sent to the client.\nAn image content.\nA text content.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe image data.\nThe MIME type of the image.\nThe text content.\nThe client capabilities.\nThe client information.\nAn initialize request.\nAn initialize response.\nPrompts capability.\nResources capability.\nThe server capabilities.\nThe server information.\nTools capability.\nThe client capabilities.\nThe server capabilities.\nThe client information.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe server instructions.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndicates whether the server will emit notifications when …\nIndicates whether the server will emit notifications when …\nIndicates whether the server will emit notifications when …\nThe client name.\nThe server name.\nPrompts capability.\nThe protocol version.\nThe protocol version.\nResources capability.\nThe server information.\nWhether the client can subscribe to be notified of changes …\nTools capability.\nThe client version.\nThe server version.\nAssistant\nPrompt information.\nPrompt argument.\nA response to a prompts/get request.\nA prompt message.\nA request to list prompts.\nA response to a prompts/list request.\nA role type to indicate the speaker.\nUser\nThe input schema of the tool.\nThe content of the message.\nThe cursor to continue listing tools.\nThe description of the argument.\nThe description of the tool.\nPrompt description.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the response is an error.\nThe name of the argument.\nThe name of the tool.\nCreates a new prompt message.\nPrompts list.\nWhether the argument is required.\nThe role type.\nResource information.\nA request to list resources.\nA response to a resources/list request.\nThe cursor to continue listing tools.\nThe description of the tool.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe mime type of the resource.\nThe name of the tool.\nResources list.\nThe uri of the resource.\nA batch of requests.\nA batch of responses.\nA JSON-RPC batch request.\nA JSON-RPC batch response\nCancelled notification.\nInitialize.\nInitialized notification.\nA numeric request id.\nPing.\nPrompts list.\nA JSON-RPC request.\nA JSON-RPC request id.\nA JSON-RPC request body.\nResources list.\nA JSON-RPC response.\nA JSON-RPC error.\nA single request.\nA single response.\nA string request id.\nCall a tool.\nTools list.\nThe request body.\nThe response error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe request id.\nThe request id.\nCreate a JSON-RPC error with code <code>INTERNAL_ERROR(-32603)</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a JSON-RPC error with code <code>INVALID_PARAMS(-32602)</code> …\nCreate a JSON-RPC error with code <code>INVALID_REQUEST(-32600)</code> …\nReturn <code>true</code> if the batch is empty.\nThe JSON-RPC version.\nThe JSON-RPC version.\nReturn the number of requests in the batch.\nConvert the response body to <code>serde_json::Value</code>.\nCreate a JSON-RPC error with code <code>METHOD_NOT_FOUND(-32601)</code> …\nCreate a new JSON-RPC error with the given code and …\nCreate a JSON-RPC error with code <code>PARSE_ERROR(-32700)</code> and …\nReturn the requests in the batch.\nThe response result.\nAttach data to the JSON-RPC error.\nInitialize request parameters.\nTools list request parameters.\nTool call request parameters.\nPrompts list request parameters.\nPrompts list request parameters.\nAn optional reason string that can be logged or displayed\nThe ID of the request to cancel\nTool information.\nA request to call a tool.\nA response to a tools/call request.\nA request to list tools.\nA response to a tools/list request.\nThe arguments passed to the tool.\nResponse content.\nThe cursor to continue listing tools.\nThe description of the tool.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe input schema of the tool.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the response is an error.\nThe name of the tool.\nThe name of the tool.\nTools list.\nRun the server using standard input and output.\nRepresents the result of a tool call.\nEmpty tools collection.\nRepresents a tools collection.\nCalls a tool.\nReturns the argument unchanged.\nReturns the instructions for the tools.\nCalls <code>U::from(self)</code>.\nConsumes the object and converts it into a tool response.\nReturns a list of tools.")